
# AWS S3 Configuration
aws.s3.bucketName=nomorebugs
cloud.aws.region=ap-south-1
cloud.aws.credentials.access-key=access-key
cloud.aws.credentials.secret-key=secret-key

spring.application.name=question

#config client configuration
#spring.profiles.active=prod
#spring.config.import=optional:configserver:http://localhost:8084/


#service registry configuration
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone =  http://localhost:8761/eureka/

management.endpoints.web.exposure.include=*
management.info.env.enabled=true

#info endpoint configuration of service
info.app.name=Question
info.app.description=Question microservice implementation
info.app.version=1.0.0

#to shutdown the service internally
endpoints.shutdown.enabled=true
management.endpoint.shutdown.enabled=true

spring.data.mongodb.uri=mongodb://localhost:27017/no-more-bugs
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=no-more-bugs
server.port=8081
server.servlet.context-path=/nomorebugs/question

# Micrometer related properties
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.metrics.distribution.percentiles-histogram.http.server.requests=true
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]




resilience4j.circuitbreaker.configs.default.registerHealthIndicator= true
#minimum #of calls to analyze the health
resilience4j.circuitbreaker.instances.defaultCircuitBreaker.minimumNumberOfCalls= 5
# % failure before opening the circuit
resilience4j.circuitbreaker.instances.defaultCircuitBreaker.failureRateThreshold= 50
#time circuit breaker to waut before opening the half circuit
resilience4j.circuitbreaker.instances.defaultCircuitBreaker.waitDurationInOpenState= 30000
#when in half open circuit #of requs to allow
resilience4j.circuitbreaker.instances.defaultCircuitBreaker.permittedNumberOfCallsInHalfOpenState=2

#resilience4j.retry.configs.default.registerHealthIndicator= true
resilience4j.retry.instances.defaultRetry.max-attempts=3
resilience4j.retry.instances.defaultRetry.waitDuration=2000